AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a custom resource Lambda to delegate administration and configure Detective within an AWS Organization - 'detective_org'
  solution in the repo.
Parameters:
  OrganizationId:
    Type: String
    Description: "The Amazon Organizations ID for Control Tower."
    MinLength: 12
    MaxLength: 12
    AllowedPattern: '^[o][\-][a-z0-9]{10}$'
    ConstraintDescription: "The Organization ID must be a 12 character string starting with o- and followed by 10 Lowercase Alphanumeric Characters."
  DetectiveMasterAccountId:
    Type: String
    Description: "The AWS Account ID that will be configured as the Delegated Admin."
    AllowedPattern: '^[0-9]{12}$'
    ConstraintDescription: "This must be a 12 character string."
    MinLength: 12
    MaxLength: 12
  S3SourceBucket:
    Type: String
    Description: "The S3 Bucket that contains the Lambda Zip File."
  S3Key:
    Type: String
    Description: "The S3 Path to the Lambda Zip File"
  RoleToAssume:
    Type: String
    Default: 'AWSControlTowerExecution'
    Description: "What role should be assumed in accounts to enable GuardDuty?  The Default is AWSControlTowerExecution for a Control Tower environment."
  ExcludedAccounts:
    Description: Excluded Accounts list. This list should contain Management account, Log Archive and Audit accounts at the minimum
    Default: ""
    MaxLength: 2000
    Type: String

Resources:
  CustomResourceEnableDetective:
    Type: Custom::EnabledDetective
    Properties:
      ServiceToken: !GetAtt LambdaEnableDetective.Arn
  LambdaEnableDetective:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - x86_64
      Code:
        S3Bucket: !Ref S3SourceBucket
        S3Key: !Ref S3Key
      Description: "Lambda Function that is triggered by CloudFormation Custom Resource to Enable Amazon Detective by Default."
      FunctionName: Lambda-Enable-Detective
      Handler: index.lambda_handler
      Layers:
        - !Ref LambdaLayerCfnresponse
      Role: !GetAtt LambdaRoleEnableDetective.Arn
      Runtime: python3.9
      MemorySize: 128
      Timeout: 600
      Environment:
        Variables:
            DETECTIVE_MASTER_ACCOUNT: !Ref DetectiveMasterAccountId
            ROLE_TO_ASSUME: !Ref RoleToAssume
            EXCLUDED_ACCOUNTS: !Ref ExcludedAccounts

  LambdaLayerCfnresponse:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: !Ref S3SourceBucket
        S3Key: "detective/cfnresponse.zip"
      Description: v1.1.2 of cfnresponse
      LayerName: cfnresponse

  LambdaRoleEnableDetective:    
    Type: AWS::IAM::Role
    Properties:
      Description: "Service-Role for Lambda-Enable-Detective to have the required access to execute successfully"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      RoleName: "LambdaExecutionRole-EnableDetective"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonDetectiveFullAccess"
      Policies:
      - PolicyName: "Enable-Detective"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Resource: !Sub "arn:aws:iam::*:role/${RoleToAssume}"
            Condition:
              StringEquals:
                "aws:PrincipalOrgId": !Ref OrganizationId
          - Effect: "Allow"
            Action:
              - organizations:DeregisterDelegatedAdministrator
            Resource: !Sub "arn:aws:organizations::${AWS::AccountId}:account/${OrganizationId}/*"
          - Effect: "Allow"
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Lambda-Enable-Detective:*"
          - Effect: "Allow"
            Action:
              - organizations:RegisterDelegatedAdministrator
              - organizations:ListAccounts
              - organizations:ListDelegatedAdministrators
              - organizations:ListAWSServiceAccessForOrganization
              - organizations:DescribeOrganization
              - organizations:DisableAWSServiceAccess
              - organizations:EnableAWSServiceAccess
              - cloudformation:ListStackInstances
              - detective:CreateMembers
              - detective:DescribeOrganizationConfiguration
              - detective:ListMembers
              - detective:ListDataSourcePackages
              - detective:UpdateDatasourcePackages
              - detective:UpdateOrganizationConfiguration
              - detective:ListOrganizationAdminAccount
              - detective:ListGraphs
              - detective:CreateMembers
              - detective:EnableOrganizationAdminAccount
              - iam:CreateServiceLinkedRole
            Resource: "*"
      - PolicyName: sra-detective
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: DetectiveAccess
              Effect: Allow
              Action:
                - detective:CreateMembers
                - detective:DescribeOrganizationConfiguration
                - detective:ListMembers
                - detective:ListDataSourcePackages
                - detective:UpdateDatasourcePackages
                - detective:UpdateOrganizationConfiguration
              Resource: !Sub arn:${AWS::Partition}:detective:*:*:graph:*


  LifeCycleRuleDetective:
    Type: AWS::Events::Rule
    Properties:
      Description: "Amazon Detective LifeCycle Trigger"
      EventPattern:
        source:
          - "aws.controltower"
        detail-type:
          - "AWS Service Event via CloudTrail"
        detail:
          eventName:
            - "CreateManagedAccount"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt LambdaEnableDetective.Arn
          Id: "NewAccount"

  PermissionForCTEventToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaEnableDetective.Arn
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt LifeCycleRuleDetective.Arn
